import os
import json

# 設定檔案路徑
vscode_folder = ".vscode"
tasks_file = os.path.join(vscode_folder, "tasks.json")
launch_file = os.path.join(vscode_folder, "launch.json")

# 確保 .vscode 資料夾存在
if not os.path.exists(vscode_folder):
    os.makedirs(vscode_folder)

# 生成 tasks.json 內容
tasks_content = {
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build C++",
            "type": "shell",
            "command": "g++",
            "args": [
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}.exe"
            ],
            "group": {
                "kind": "build",
                "isDefault": True
            },
            "problemMatcher": ["$gcc"],
            "detail": "Generated by Python script"
        }
    ]
}

# 將 tasks.json 寫入到 .vscode
with open(tasks_file, 'w') as f:
    json.dump(tasks_content, f, indent=4)

# 生成 launch.json 內容
launch_content = {
    "version": "0.2.0",
    "configurations": [
        {
            "name": "C++ Debug",
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}/${fileBasenameNoExtension}.exe",
            "args": [],
            "stopAtEntry": False,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": False,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": True
                }
            ],
            "preLaunchTask": "Build C++",
            "miDebuggerPath": "/usr/bin/gdb",  # 根據你的 gdb 路徑修改
            "logging": {"engineLogging": True},
            "targetArchitecture": "x64",
            "program": "${fileDirname}/${fileBasenameNoExtension}.exe"
        }
    ]
}

# 將 launch.json 寫入到 .vscode
with open(launch_file, 'w') as f:
    json.dump(launch_content, f, indent=4)

print("VS Code C++ configuration files have been created.")
