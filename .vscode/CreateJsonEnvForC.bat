@echo off
REM Create .vscode directory if it doesn't exist
if not exist ".vscode" mkdir ".vscode"

REM Create tasks.json file
echo { > .vscode\tasks.json
echo     "version": "2.0.0", >> .vscode\tasks.json
echo     "tasks": [ >> .vscode\tasks.json
echo         { >> .vscode\tasks.json
echo             "label": "build", >> .vscode\tasks.json
echo             "type": "shell", >> .vscode\tasks.json
echo             "command": "g++", >> .vscode\tasks.json
echo             "args": [ >> .vscode\tasks.json
echo                 "-g", >> .vscode\tasks.json
echo                 "%%file%%", >> .vscode\tasks.json
echo                 "-o", >> .vscode\tasks.json
echo                 "%%fileDirname%%/%%fileBasenameNoExtension%%.exe" >> .vscode\tasks.json
echo             ], >> .vscode\tasks.json
echo             "group": { >> .vscode\tasks.json
echo                 "kind": "build", >> .vscode\tasks.json
echo                 "isDefault": true >> .vscode\tasks.json
echo             }, >> .vscode\tasks.json
echo             "problemMatcher": ["$gcc"], >> .vscode\tasks.json
echo             "detail": "Task generated by script to compile C++ using g++" >> .vscode\tasks.json
echo         } >> .vscode\tasks.json
echo     ] >> .vscode\tasks.json
echo } >> .vscode\tasks.json
echo Created .vscode\tasks.json

REM Create launch.json file
echo { > .vscode\launch.json
echo     "version": "0.2.0", >> .vscode\launch.json
echo     "configurations": [ >> .vscode\launch.json
echo         { >> .vscode\launch.json
echo             "name": "g++ build and debug active file", >> .vscode\launch.json
echo             "type": "cppdbg", >> .vscode\launch.json
echo             "request": "launch", >> .vscode\launch.json
echo             "program": "%%fileDirname%%/%%fileBasenameNoExtension%%.exe", >> .vscode\launch.json
echo             "args": [], >> .vscode\launch.json
echo             "stopAtEntry": false, >> .vscode\launch.json
echo             "cwd": "%%fileDirname%%", >> .vscode\launch.json
echo             "environment": [], >> .vscode\launch.json
echo             "externalConsole": false, >> .vscode\launch.json
echo             "MIMode": "gdb", >> .vscode\launch.json
echo             "miDebuggerPath": "C:/msys64/ucrt64/bin/gdb.exe", >> .vscode\launch.json
echo             "setupCommands": [ >> .vscode\launch.json
echo                 { >> .vscode\launch.json
echo                     "description": "Enable pretty-printing for gdb", >> .vscode\launch.json
echo                     "text": "-enable-pretty-printing", >> .vscode\launch.json
echo                     "ignoreFailures": true >> .vscode\launch.json
echo                 } >> .vscode\launch.json
echo             ], >> .vscode\launch.json
echo             "preLaunchTask": "build", >> .vscode\launch.json
echo             "internalConsoleOptions": "openOnSessionStart" >> .vscode\launch.json
echo         } >> .vscode\launch.json
echo     ] >> .vscode\launch.json
echo } >> .vscode\launch.json
echo Created .vscode\launch.json
